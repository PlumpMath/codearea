// Generated by CoffeeScript 1.3.1
var locked, nc2md, put, store, tag;

tag = function(id) {
  return document.getElementById(id);
};

nc2md = function(file, silent) {
  var last_line, line, match, md, _i, _len, _ref, _ref1;
  last_line = '';
  md = [];
  _ref = file.split('\n');
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    line = _ref[_i];
    if ((_ref1 = line[0]) === '>' || _ref1 === '-' || _ref1 === '*' || _ref1 === ' ' || _ref1 === '+') {
      if ((last_line[0] != null) && last_line[0] !== line[0]) {
        md.push('');
      }
    }
    if ((match = line.match(/^(\S.*)\s*$/))) {
      md.push(silent ? match[1] : match[1] + '  ');
    } else if ((match = line.match(/^(\s\s.*)\s*$/))) {
      md.push("  " + match[1]);
    } else {
      md.push(line);
    }
    last_line = line;
  }
  return md.join('\n');
};

put = function(str) {
  return makeHtml(nc2md(str, true));
};

store = void 0;

locked = false;

window.onload = function() {
  var f, text, view;
  text = tag('text');
  view = tag('view');
  text.value = localStorage.text;
  text.focus();
  textareaEditor('text');
  view.innerHTML = put(text.value);
  text.oninput = function() {
    if (!locked) {
      return view.innerHTML = put(text.value);
    }
  };
  document.onkeydown = function(e) {
    if (e.keyCode === 27) {
      if (locked) {
        locked = false;
        return text.value = store;
      } else {
        locked = true;
        store = text.value;
        text.value = nc2md(store, false);
        text.selectionStart = 0;
        return text.selectionStart = -1;
      }
    }
  };
  f = function() {
    return localStorage.text = text.value;
  };
  return setInterval(f, 100);
};
